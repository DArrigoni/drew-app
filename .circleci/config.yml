# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details

version: 2
workflows:
  version: 2

  ci:
    jobs:
      - workspace
      - web-client:
          requires:
            - workspace
      - server:
          requires:
            - workspace
      - integration:
          requires:
            - web-client
            - server
      - deploy:
          requires:
            - integration
jobs:
  workspace:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: pguser_test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: pguser_test
          POSTGRES_DB: drew-app_test
    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo/
      - run:
          name: 'Sync Submodules'
          working_directory: ~/repo/
          command: |
            git submodule sync
            git submodule update --init

      # Root Deps
      - restore_cache:
          keys:
          - v1-root-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}
          - v1-root-dependencies-
      - run:
          name: Root Dependeinces
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
            npm install
      - save_cache:
          paths:
            - node_modules
            - vendor/bundle
          key: v1-root-dependencies-{{ checksum "Gemfile.lock" }}-{{ checksum "package.json" }}

      # Server Deps
      - restore_cache:
          keys:
            - v1-server-dependencies-{{ checksum "drew-server/Gemfile.lock" }}
            - v1-server-dependencies-
      - run:
          name: Server Dependencies
          command: bundle install --jobs=4 --retry=3 --path vendor/bundle
          working_directory: ~/repo/drew-server
      - save_cache:
          paths:
            - drew-server/vendor/bundle
          key: v1-server-dependencies-{{ checksum "drew-server/Gemfile.lock" }}

      # Web-Client Deps
      - restore_cache:
          keys:
            - v1-web-client-dependencies-{{ checksum "drew-web-client/package.json" }}
            - v1-web-client-dependencies-
      - run:
          name: Web-Client dependencies
          command: npm install
          working_directory: ~/repo/drew-web-client
      - save_cache:
          paths:
            - drew-web-client/node_modules
          key: v1-web-client-dependencies-{{ checksum "drew-web-client/package.json" }}

      # Save it to the workspace
      - persist_to_workspace:
          root: ~/
          paths:
            - repo

  web-client:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: pguser_test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: pguser_test
          POSTGRES_DB: drew-app_test
    working_directory: ~/repo/drew-web-client
    steps:
      - attach_workspace:
          at: ~/
      - run: npm run test:unit

  server:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: pguser_test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: pguser_test
          POSTGRES_DB: drew-app_test
    working_directory: ~/repo/drew-server

    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Verify Database Running
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s

      # Database setup
      - run:
          name: Prepare Database
          command: |
            bundle install --path vendor/bundle
            bundle exec rake db:create db:schema:load --trace

      # Run and save tests
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
  integration:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: pguser_test
      - image: circleci/postgres:9.4
        environment:
          POSTGRES_USER: pguser_test
          POSTGRES_DB: drew-app_test
    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/
      - run:
          name: Verify Database Running
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 120s


      # Database setup
      - run:
          name: Prepare Database
          command: |
            bundle install --path vendor/bundle
            bundle exec rake db:create db:schema:load --trace
            sleep 5
          working_directory: ~/repo/drew-server

      - run:
          name: Prepare runner
          command: bundle install --path vendor/bundle


      - run:
          name: Integration tests
          command: bundle exec cucumber

      - store_artifacts:
          path: ~/repo/test.out

      - store_artifacts:
          path: ~/repo/drew-server/log/test.log

      - store_artifacts:
          path: ~/repo/error-report/*


  deploy:
    docker:
      - image: circleci/ruby:2.5.1-node-browsers
    working_directory: ~/repo

    steps:
      - attach_workspace:
          at: ~/

      - run:
          name: Install deployment dependencies
          working_directory: ~/repo/drew-server
          command: |
            sudo apt-get -y -qq update
            sudo apt-get install python-pip python-dev build-essential
            sudo pip install awsebcli --upgrade

      - run:
          name: Deploy server
          working_directory: ~/repo/drew-server
          command: eb deploy

      - run:
          name: Clean and build web-client for production
          working_directory: ~/repo/
          command: |
            rm -r dist/
            npm run build -- --mode production

      - run:
          name: Deploy web-client
          working_directory: ~/repo/drew-web-client
          command: npm run deploy